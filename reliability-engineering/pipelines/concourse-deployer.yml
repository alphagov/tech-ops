
resource_types:

- name: terraform
  type: registry-image
  source:
    repository: ljfranklin/terraform-resource
    tag: 0.12.25
- name: paas-semver
  type: docker-image
  source:
    repository: governmentpaas/semver-resource
    tag: latest

resources:

- name: tech-ops-private
  icon: github-circle
  type: git
  source:
    branch: ((deployment_branch))
    tag_filter: ((deployment_tag))
    uri: git@github.com:alphagov/tech-ops-private.git
    private_key: ((re-autom8-ci-github-ssh-private-key))
    paths:
      - reliability-engineering/terraform/deployments/gds-tech-ops/((deployment_name))
- name: tech-ops
  icon: github-circle
  type: git
  source:
    branch: ((deployment_branch))
    tag_filter: ((deployment_tag))
    uri: git@github.com:alphagov/tech-ops.git
    private_key: ((re-autom8-ci-github-ssh-private-key))
    paths:
      - reliability-engineering/terraform/modules
      - reliability-engineering/pipelines/tasks/asg-scale-max-capacity.yml
      - reliability-engineering/pipelines/tasks/concourse-land-workers.yml
      - reliability-engineering/pipelines/tasks/concourse-provider-config.yml
      - reliability-engineering/pipelines/tasks/git-tag.yml
      - reliability-engineering/pipelines/concourse-deployer.yml
      - reliability-engineering/dockerfiles/test.Dockerfile
- name: infra
  icon: terraform
  type: terraform
  source:
    env_name: default
    backend_type: s3
    private_key: ((re-autom8-ci-github-ssh-private-key))
    backend_config:
      bucket: gds-tech-ops-tfstate
      region: eu-west-2
      key: ((deployment_name)).tfstate
- name: version
  type: paas-semver
  source:
    driver: s3
    key: ((deployment_name))-version
    bucket: ((readonly_private_bucket_name))
    region_name: eu-west-2
    initial_version: '1.0.0'
- name: ecr
  type: docker-image
  icon: layers
  source:
    repository: ((readonly_private_ecr_repo_url))

jobs:

- name: update
  serial: true
  serial_groups: [deploy]
  plan:
  - in_parallel:
    - get: tech-ops-private
      trigger: true
    - get: tech-ops
      trigger: true
    - get: infra
  - set_pipeline: deploy
    file: tech-ops/reliability-engineering/pipelines/concourse-deployer.yml
    vars:
      deployment_name: ((deployment_name))
      deployment_branch: ((deployment_branch))
      deployment_tag: ((deployment_tag))

- name: deploy
  serial: true
  serial_groups: [deploy]
  plan:
  - in_parallel:
    - get: tech-ops-private
      passed: [update]
      trigger: true
    - get: tech-ops
      passed: [update]
      trigger: true
    - get: infra
      passed: [update]
  - task: configure-providers
    file: tech-ops/reliability-engineering/pipelines/tasks/concourse-provider-config.yml
    params:
      DEPLOYMENT_NAME: ((deployment_name))
  - put: infra
    params:
      terraform_source: tech-ops-private/reliability-engineering/terraform/deployments/gds-tech-ops/((deployment_name))
      override_files:
      - concourse-provider-config/provider_concourse_override.tf.json

- name: scale-out
  serial: true
  serial_groups: [deploy]
  plan:
  - in_parallel:
    - get: tech-ops-private
      passed: [deploy]
      trigger: true
    - get: tech-ops
      passed: [deploy]
      trigger: true
    - get: infra
      passed: [deploy]
  - task: configure-providers
    file: tech-ops/reliability-engineering/pipelines/tasks/concourse-provider-config.yml
    params:
      DEPLOYMENT_NAME: ((deployment_name))
  - do:
    - task: get-current-workers
      file: tech-ops/reliability-engineering/pipelines/tasks/concourse-get-workers.yml
      params:
        DEPLOYMENT_NAME: ((deployment_name))
    - in_parallel:
      - task: scale-out-web-node-asg
        file: tech-ops/reliability-engineering/pipelines/tasks/asg-scale-max-capacity.yml
        params:
          ASG_PREFIX: ((deployment_name))-concourse-web
      - task: scale-out-main-team-workers-asg
        file: tech-ops/reliability-engineering/pipelines/tasks/asg-scale-max-capacity.yml
        params:
          ASG_PREFIX: ((deployment_name))-main-concourse-worker
    - task: land-old-workers
      file: tech-ops/reliability-engineering/pipelines/tasks/concourse-land-workers.yml
      params:
        DEPLOYMENT_NAME: ((deployment_name))
    on_failure:
      put: infra # try to scale back in on failure to stay in sync
      attempts: 10
      params:
        terraform_source: tech-ops-private/reliability-engineering/terraform/deployments/gds-tech-ops/((deployment_name))
        override_files:
        - concourse-provider-config/provider_concourse_override.tf.json

- name: scale-in
  serial: true
  serial_groups: [deploy]
  plan:
  - in_parallel:
    - get: tech-ops-private
      passed: [scale-out]
      trigger: true
    - get: tech-ops
      passed: [scale-out]
      trigger: true
    - get: infra
      passed: [scale-out]
  - task: configure-providers
    file: tech-ops/reliability-engineering/pipelines/tasks/concourse-provider-config.yml
    params:
      DEPLOYMENT_NAME: ((deployment_name))
  - put: infra
    params:
      terraform_source: tech-ops-private/reliability-engineering/terraform/deployments/gds-tech-ops/((deployment_name))
      override_files:
      - concourse-provider-config/provider_concourse_override.tf.json

- name: test
  serial: true
  serial_groups: [deploy]
  plan:
  - in_parallel:
    - get: tech-ops-private
      attempts: 50
      passed: [scale-in]
      trigger: true
    - get: tech-ops
      attempts: 50
      passed: [scale-in]
      trigger: true
    - get: version
      attempts: 50
      params: {bump: minor}
  - put: ecr # this is a simple check to ensure push to ecr works
    params:
      build: version
      dockerfile: tech-ops/reliability-engineering/dockerfiles/test.Dockerfile
      tag: version/version
      tag_prefix: ((deployment_name))-
  - in_parallel:
    - task: tag-tech-ops
      file: tech-ops/reliability-engineering/pipelines/tasks/git-tag.yml
      input_mapping:
        repository: tech-ops
        version: version
      params:
        SSH_PRIVATE_KEY: ((re-autom8-ci-github-ssh-private-key))
        GPG_PRIVATE_KEY: ((re-autom8-ci-github-gpg-private-key))
        TAG_PREFIX: ((deployment_name))-
    - task: tag-tech-ops-private
      file: tech-ops/reliability-engineering/pipelines/tasks/git-tag.yml
      input_mapping:
        repository: tech-ops-private
        version: version
      params:
        SSH_PRIVATE_KEY: ((re-autom8-ci-github-ssh-private-key))
        GPG_PRIVATE_KEY: ((re-autom8-ci-github-gpg-private-key))
        TAG_PREFIX: ((deployment_name))-
  - put: version
    params:
      file: version/version
