platform: linux
image_resource:
  type: registry-image
  source:
    repository: concourse/concourse-pipeline-resource
    tag: dev
  version:
    digest: sha256:cd899511e06c3027dc8429f4b38ba8ea32a4c0bea044f4711899d5987abf8fdf
params:
  DEPLOYMENT_NAME:
  FLY_USERNAME: main
  FLY_TEAM: main
inputs:
- name: concourse-provider-config
- name: workers
run:
  path: sh
  args:
  - -euo
  - pipefail
  - -c
  - |
    echo "configuring fly..."
    export PATH="$PATH:/opt/resource"
    FLY_PASSWORD=$(cat concourse-provider-config/main_team_password)
    fly -t concourse login \
      -c "https://${DEPLOYMENT_NAME}.gds-reliability.engineering" \
      -u "${FLY_USERNAME}" \
      -p "${FLY_PASSWORD}" \
      -n "${FLY_TEAM}"
    fly -t concourse sync
    echo "waiting for the new workers to appear..."
    function get_current_worker_count() {
      fly -t concourse workers | grep "${FLY_TEAM}" | grep running | wc -l
    }
    function get_old_worker_count() {
      wc -l <workers/names
    }
    echo "wait for landing..."
    while [ "$(get_current_worker_count)" > "$(get_old_worker_count)" ]; do
      echo "...still too many workers currently $(get_current_worker_count) workers"
      sleep 10
    done
    echo "pruning the old workers..."
    for worker in $(cat workers/names); do
      echo "--> ${worker} is being pruned"
      fly -t concourse prune-worker --worker "${worker}"
    done
    echo "OK!"
