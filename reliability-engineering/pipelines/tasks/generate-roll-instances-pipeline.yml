platform: linux
image_resource:
  type: registry-image
  source:
    repository: concourse/concourse-pipeline-resource
    tag: dev
  version:
    digest: sha256:cd899511e06c3027dc8429f4b38ba8ea32a4c0bea044f4711899d5987abf8fdf
inputs:
- name: tech-ops
outputs:
- name: roll-instances-pipeline
params:
  DEPLOYMENT_NAME:
  DEPLOYMENT_SUBDOMAIN:
  FLY_USERNAME:
  FLY_PASSWORD:
run:
  path: /bin/bash
  args:
  - -euo
  - pipefail
  - -c
  - |
    apk add -X https://dl-cdn.alpinelinux.org/alpine/v3.16/main -u alpine-keys
    apk update && apk add jq && apk add yq
    mkdir -p roll-instances-pipeline
    export PATH="$PATH:/opt/resource"

    # to avoid having to gpg-verify the tag of the tech-ops commit
    # in the generated pipeline, we inline the task definitions into
    # the pipeline so it doesn't need access to the repo at all.
    #
    # first we need to convert the yaml task definitions to json though...
    mkdir -p tasks-json
    for t in asg-scale-capacity concourse-get-workers concourse-land-workers; do
      yq e '.' tech-ops/reliability-engineering/pipelines/tasks/${t}.yml -j \
        > tasks-json/${t}.json
    done

    fly -t concourse login -c "https://${DEPLOYMENT_NAME}${DEPLOYMENT_SUBDOMAIN}.gds-reliability.engineering" -u $FLY_USERNAME -p $FLY_PASSWORD -n $FLY_USERNAME
    fly -t concourse sync
    fly -t concourse teams --json | jq 'def rolltasks: [
      {
        "task": ("ensure-" + .name + "-team-workers-asg-scaled-in"),
        "config": $asg_scale_capacity[0],
        "params": {
          "ASG_PREFIX": (("((" + "deployment_name" + "))") + "-" + .name + "-concourse-worker"),
          "SCALE_DIRECTION": "in",
          "SUSPEND_SCHEDULED_SCALING_BEFORE": true
        }
      },
      {
        "task": ("get-current-" + .name + "-team-workers"),
        "config": $concourse_get_workers[0],
        "params": {
          "DEPLOYMENT_NAME": ("((" + "deployment_name" + "))"),
          "DEPLOYMENT_SUBDOMAIN": ("((" + "deployment_subdomain" + "))"),
          "FLY_PASSWORD" : ("((" + "readonly_local_user_password" + "))"),
          "FLY_TEAM": .name
        }
      },
      {
        "task": ("scale-out-" + .name + "-team-workers-asg"),
        "config": $asg_scale_capacity[0],
        "params": {
          "ASG_PREFIX": (("((" + "deployment_name" + "))") + "-" + .name + "-concourse-worker"),
          "SCALE_DIRECTION": "out"
        }
      },
      {
        "task": ("land-old-" + .name + "-team-workers"),
        "config": $concourse_land_workers[0],
        "params": {
          "DEPLOYMENT_NAME": ("((" + "deployment_name" + "))"),
          "DEPLOYMENT_SUBDOMAIN": ("((" + "deployment_subdomain" + "))"),
          "FLY_PASSWORD" : ("((" + "readonly_local_user_password" + "))"),
          "FLY_TEAM": .name
        }
      },
      {
        "task": ("scale-in-" + .name + "-team-workers-asg"),
        "config": $asg_scale_capacity[0],
        "params": {
          "ASG_PREFIX": (("((" + "deployment_name" + "))") + "-" + .name + "-concourse-worker"),
          "SCALE_DIRECTION": "in",
          "RESUME_SCHEDULED_SCALING_AFTER": true
        }
      }
    ]; [.[] | select(.name != "main")] | {
      "resources": [
        {
          "name": "every-weekday-evening",
          "type": "time",
          "source": {
            "location": "Europe/London",
            "start": "20:00",
            "stop": "21:00",
            "days": [
              "Monday",
              "Tuesday",
              "Wednesday",
              "Thursday",
              "Friday"
            ]
          }
        }
      ],
      "jobs": ([
        {
          "name": "roll-all-concourse-workers",
          "serial": true,
          "plan": ([
            {
              "get": "every-weekday-evening",
              "trigger": true
            }
          ] + [.[] | rolltasks | {"do": .}])
        }
      ] + [.[] | {
        "name": ("roll-" + .name + "-concourse-workers"),
        "serial": true,
        "plan": (. | rolltasks)
      }])
    }' \
      --slurpfile asg_scale_capacity tasks-json/asg-scale-capacity.json \
      --slurpfile concourse_get_workers tasks-json/concourse-get-workers.json \
      --slurpfile concourse_land_workers tasks-json/concourse-land-workers.json \
      > roll-instances-pipeline/roll-instances.json
