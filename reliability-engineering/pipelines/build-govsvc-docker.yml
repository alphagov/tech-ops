resources:
- name: govsvc-aws-ruby
  type: docker-image
  source:
    username: ((dockerhub-username))
    password: ((dockerhub-password))
    repository: govsvc/aws-ruby

- name: github-aws-ruby
  type: docker-image
  source:
    username: ((github-packages-username))
    password: ((github-packages-token))
    repository: ghcr.io/alphagov/aws-ruby

- name: ruby-2.6.1
  type: docker-image
  source:
    repository: ruby
    tag: "2.6.1"

- name: govsvc-aws-ruby-git
  type: git
  source:
    uri: https://github.com/alphagov/tech-ops.git
    branch: master
    paths:
    - reliability-engineering/dockerfiles/govsvc/aws-ruby

- name: build-govsvc-docker-pipeline
  type: git
  source:
    uri: https://github.com/alphagov/tech-ops.git
    branch: master
    paths:
    - reliability-engineering/pipelines/build-govsvc-docker.yml

- name: awscli
  type: docker-image
  source:
    username: ((dockerhub-username))
    password: ((dockerhub-password))
    repository: governmentpaas/awscli

- name: govsvc-octodns
  type: docker-image
  source:
    username: ((dockerhub-username))
    password: ((dockerhub-password))
    repository: govsvc/octodns

- name: github-octodns
  type: docker-image
  source:
    username: ((github-packages-username))
    password: ((github-packages-token))
    repository: ghcr.io/alphagov/octodns

- name: govsvc-octodns-git
  type: git
  source:
    uri: https://github.com/alphagov/tech-ops.git
    branch: master
    paths:
    - reliability-engineering/dockerfiles/govsvc/octodns

- name: golang-1.12-image
  type: docker-image
  source:
    repository: golang
    tag: "1.12"

- name: govsvc-awsc-image
  type: docker-image
  source:
    username: ((dockerhub-username))
    password: ((dockerhub-password))
    repository: govsvc/awsc

- name: github-awsc
  type: docker-image
  source:
    username: ((github-packages-username))
    password: ((github-packages-token))
    repository: ghcr.io/alphagov/awsc

- name: govsvc-awsc-git
  type: git
  source:
    uri: https://github.com/alphagov/tech-ops.git
    branch: master
    paths:
    - reliability-engineering/dockerfiles/govsvc/awsc

- name: ubuntu
  type: docker-image
  source:
    repository: ubuntu

- name: terraform
  type: docker-image
  source:
    repository: hashicorp/terraform

- name: terraform-0.12
  type: docker-image
  source:
    repository: hashicorp/terraform
    tag: 0.12.29

- name: govsvc-aws-terraform
  type: docker-image
  source:
    username: ((dockerhub-username))
    password: ((dockerhub-password))
    repository: govsvc/aws-terraform

- name: github-aws-terraform
  type: docker-image
  source:
    username: ((github-packages-username))
    password: ((github-packages-token))
    repository: ghcr.io/alphagov/aws-terraform

- name: govsvc-aws-terraform-git
  type: git
  source:
    uri: https://github.com/alphagov/tech-ops.git
    branch: master
    paths:
    - reliability-engineering/dockerfiles/govsvc/aws-terraform

- name: github-automate-task-toolbox
  type: docker-image
  source:
    username: ((github-packages-username))
    password: ((github-packages-token))
    repository: ghcr.io/alphagov/automate/task-toolbox

- name: automate-task-toolbox-git
  type: git
  source:
    uri: https://github.com/alphagov/tech-ops.git
    branch: master
    paths:
    - reliability-engineering/dockerfiles/govsvc/concourse-task-toolbox

jobs:
- name: selfupdate
  serial: true
  plan:
  - get: build-govsvc-docker-pipeline
    trigger: true
  - set_pipeline: build-govsvc-docker
    file: build-govsvc-docker-pipeline/reliability-engineering/pipelines/build-govsvc-docker.yml
- name: build-govsvc-aws-ruby
  serial: true
  plan:
  - in_parallel:
    - get: govsvc-aws-ruby-git
      trigger: true
    - get: ruby-2.6.1
      trigger: true
      params: {save: true}
  - put: govsvc-aws-ruby
    params: &aws-ruby-params
      build: govsvc-aws-ruby-git/reliability-engineering/dockerfiles/govsvc/aws-ruby
      load_bases: [ ruby-2.6.1 ]
      tag_file: ruby-2.6.1/tag
      tag_as_latest: true
    get_params: {skip_download: true}
  - put: github-aws-ruby
    params: *aws-ruby-params
    get_params: {skip_download: true}

- name: build-govsvc-aws-terraform
  serial: true
  plan:
  - in_parallel:
    - get: govsvc-aws-terraform-git
      trigger: true
    - get: terraform
      trigger: true
      params: {save: true}
    - get: ubuntu
      params: {save: true}
  - task: generate-version-args
    image: terraform
    config:
      platform: linux
      inputs:
      - name: ubuntu
      - name: terraform
      outputs:
      - name: versions
      run:
        path: ash
        args:
        - -eu
        - -c
        - |
          mkdir -p versions
          terraform version | head -n1 | cut -d' ' -f2 | cut -d'v' -f2 > versions/terraform_version
          cat <<EOF > versions/args
          {
            "ubuntu_digest": "$(cat ubuntu/digest)",
            "terraform_digest": "$(cat terraform/digest)",
            "terraform_version": "$(cat versions/terraform_version)"
          }
          EOF
          cat versions/*
  - put: govsvc-aws-terraform
    params: &aws-terraform-params
      build: govsvc-aws-terraform-git/reliability-engineering/dockerfiles/govsvc/aws-terraform
      load_bases: [ ubuntu, terraform ]
      tag_file: versions/terraform_version
      tag_as_latest: true
      build_args_file: versions/args
    get_params: {skip_download: true}
  - put: github-aws-terraform
    params: *aws-terraform-params
    get_params: {skip_download: true}

- name: build-govsvc-octodns
  serial: true
  plan:
  - in_parallel:
    - get: govsvc-octodns-git
      trigger: true
    - get: awscli
      trigger: true
      params: {save: true}
  - put: govsvc-octodns
    params: &octodns-params
      build: govsvc-octodns-git/reliability-engineering/dockerfiles/govsvc/octodns
      load_bases: [ awscli ]
    get_params: {skip_download: true}
  - put: github-octodns
    params: *octodns-params
    get_params: {skip_download: true}

- name: build-govsvc-awsc
  serial: true
  plan:
  - in_parallel:
    - get: govsvc-awsc-git
      trigger: true
    - get: golang-1.12-image
      trigger: true
      params: {save: true}
  - put: govsvc-awsc-image
    params: &awsc-params
      build: govsvc-awsc-git/reliability-engineering/dockerfiles/govsvc/awsc
      load_bases: [ golang-1.12-image ]
    get_params: {skip_download: true}
  - put: github-awsc
    params: *awsc-params
    get_params: {skip_download: true}

- name: build-github-automate-task-toolbox
  serial: true
  plan:
  - in_parallel:
    - get: automate-task-toolbox-git
      trigger: true
    - get: terraform-0.12
      trigger: true
      params: {save: true}
  - put: github-automate-task-toolbox
    params:
      build: automate-task-toolbox-git/reliability-engineering/dockerfiles/govsvc/concourse-task-toolbox
      load_bases: [ terraform-0.12 ]
    get_params: {skip_download: true}
